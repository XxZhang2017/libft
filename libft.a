!<arch>
ft_memset.c     1548944244  501   20    100644  1066      `
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   memset.c                                           :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: xinzhang <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/01/24 16:21:30 by xinzhang          #+#    #+#             */
/*   Updated: 2019/01/25 11:59:34 by xinzhang         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "libft.h"

void	*ft_memset(void *b, int c, size_t len)
{
	size_t	i;
	char	*ptr;

	i = 0;
	ptr = b;
	while (i < len && ptr)
	{
		*(ptr + i++) = c;
	}	
	return (b);
}
ft_bzero.c      1548944244  501   20    100644  1031      `
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   bzero.c                                            :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: xinzhang <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/01/24 16:32:04 by xinzhang          #+#    #+#             */
/*   Updated: 2019/01/25 16:42:45 by xinzhang         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "libft.h"

void	ft_bzero(void *s, size_t n)
{
	char	*ptr;
	size_t	i;

	i = -1;
	ptr = (char *)s;
	while (++i < n)
		ptr[i] = 0;
}

ft_memcpy.c     1548944244  501   20    100644  1120      `
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   memcpy.c                                           :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: xinzhang <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/01/25 10:32:10 by xinzhang          #+#    #+#             */
/*   Updated: 2019/01/25 15:18:22 by xinzhang         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "libft.h"

void	*ft_memcpy(void *dst, const void *src, size_t n)
{
	char	*ptr1;
	char	*ptr2;
	size_t	i;

	i = -1;
	ptr1 = (char *)dst;
	ptr2 = (char *)src;
	while (++i < n)
		*(ptr1 + i) = *(ptr2 + i);
	return (dst);
}
ft_memccpy.c    1548944244  501   20    100644  1221      `
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   memccpy.c                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: xinzhang <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/01/25 10:45:15 by xinzhang          #+#    #+#             */
/*   Updated: 2019/01/25 12:07:28 by xinzhang         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "libft.h"

void	*ft_memccpy(void *dst, const void *src, int c, size_t n)
{
	unsigned char	*ptr1;
	unsigned char	*ptr2;
	int	i;

	i = -1;
	ptr1 = (unsigned char *)dst;
	ptr2 = (unsigned char *)src;
	while (++i < n)
	{
		ptr1[i] = ptr2[i];
		if (ptr2[i] == (unsigned char)c)
			return (ptr2 + i + 1);
	}
	return (NULL);
}

ft_memcmp.c     1548944244  501   20    100644  1189      `
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_memcmp.c                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: xinzhang <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/01/25 12:07:35 by xinzhang          #+#    #+#             */
/*   Updated: 2019/01/25 15:18:48 by xinzhang         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "libft.h"

int	ft_memcmp(const void *s1, const void *s2, size_t n)
{
	unsigned char	*ptr1;
	unsigned char	*ptr2;
	size_t	i;

	i = -1;
	ptr1 = (unsigned char *)s1;
	ptr2 = (unsigned char *)s2;
	while (++i < n)
	{
		if (ptr1[i] != ptr2[i])
		   return (ptr1[i] - ptr2[i]);
	}
	return (0);
}
ft_memchr.c     1548944244  501   20    100644  1135      `
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_memchr.c                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: xinzhang <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/01/25 11:58:48 by xinzhang          #+#    #+#             */
/*   Updated: 2019/01/25 15:18:33 by xinzhang         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "libft.h"

void	*ft_memchr(const void *s, int c, size_t n)
{
	unsigned char	*ptr1;
	size_t	i;

	i = -1;
	ptr1 = (unsigned char *)s;
	while (++i < n)
	{
		if (ptr1[i] == (unsigned char)c)
			return (ptr1 + i + 1);
	}
	return (NULL);
}

ft_memmove.c    1548944244  501   20    100644  1222      `
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   memmove.c                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: xinzhang <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/01/25 11:44:59 by xinzhang          #+#    #+#             */
/*   Updated: 2019/01/25 12:00:38 by xinzhang         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "libft.h"

void	*ft_memmove(void *dst, const void *src, size_t len)
{
	char	*csrc = (char *)src;
	char	*cdest = (char *)dst;
	char	temp[len];
	int	i;
	
	printf("the src is %s\n", csrc);
	printf("the dst is %s\n", cdest);
	i = -1;
	while (++i < len)
		temp[i] = csrc[i];
	while (i--)
		cdest[i] = temp[i];
	return (dst);
}ft_strlen.c     1548944244  501   20    100644  1092      `
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_strlen.c                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: xinzhang <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/01/25 15:13:14 by xinzhang          #+#    #+#             */
/*   Updated: 2019/01/25 15:14:03 by xinzhang         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "libft.h"

size_t	ft_strlen(const char *str)
{
    size_t  i;

    i = 0;
    if (!str)
        return (0);
    while (str[i])
        i++;
//    printf("the leg %zu\n", i);
    return (i);
}ft_strcpy.c     1548944244  501   20    100644  1158      `








/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_strcpy.c                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: xinzhang <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/01/25 16:43:59 by xinzhang          #+#    #+#             */
/*   Updated: 2019/01/25 16:51:02 by xinzhang         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "libft.h"

char    *ft_strcpy(char *dest, const char *src)
{
    return ft_memcpy(dest, src, ft_strlen(src) + 1);
}

// int	main()
// {
// 	char *ch;
// 	char des[10];

// 	ch = "abci33 34";
// 	printf("%s", ft_strcpy(des, ch));
// 	return (0);
// }ft_strcat.c     1548944244  501   20    100644  1241      `
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_strcat.c                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: xinzhang <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/01/25 17:06:18 by xinzhang          #+#    #+#             */
/*   Updated: 2019/01/25 17:41:11 by xinzhang         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "libft.h"

char    *ft_strcat(char *dest, const char *src)
{
    ft_strcpy(dest + ft_strlen(dest), src);
    return (dest);
}

/*char	*ft_strcat(char *s1, const char *s2)
{
	size_t	i;
	size_t	j;

	if (!s1)
		return (NULL);
	if (!s2)
		return (s1);
	i = 0;
	j = 0;
	while (s1[i])
		i++;
	while (s2[j])
		s1[i++] = s2[j++];
	return (s1);
}*/

ft_strdup.c     1548944244  501   20    100644  1179      `
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_strdup.c                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: xinzhang <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/01/25 17:41:24 by xinzhang          #+#    #+#             */
/*   Updated: 2019/01/25 17:44:47 by xinzhang         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "libft.h"

char	*ft_strdup(const char *s1)
{
    int len;
    char    *reg;

    if (!s1)
        return (NULL);
    len = ft_strlen(s1) + 1;
    reg = (char *)malloc(sizeof(char) * len);
    if (reg == NULL)
        return (NULL);
    return (char *)ft_memcpy(reg, s1, len);
}

ft_strchr.c     1548944244  501   20    100644  1065      `
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_strchr.c                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: xinzhang <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/01/25 17:44:57 by xinzhang          #+#    #+#             */
/*   Updated: 2019/01/25 17:49:02 by xinzhang         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "libft.h"

char	*ft_strchr(const char *s, int c)
{
	if (!s)
		return (NULL);
	while (*s)
	{
		if (*s == (char)c)
			return ((char *)s);
		s++;
	}
	return (NULL);
}

ft_strstr.c     1548944244  501   20    100644  2021      `
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_strstr.c                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: xinzhang <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/01/25 17:49:30 by xinzhang          #+#    #+#             */
/*   Updated: 2019/01/25 17:54:52 by xinzhang         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "libft.h"

char	*ft_strstr(const char *haystack, const char *needle)
{
	int	i;
	int j;
	int	temp;

	i = 0;
	j = 0;
	if (!haystack)
		return  (NULL);
	if (!needle)
		return ((char *)&haystack[ft_strlen(haystack) - 1]);
	while (haystack[i] && needle[j])
	{	
		if (haystack[i] == needle[j])
		{
			j = 0;
			temp = i;	
			while (needle[j] && (haystack[i++] == needle[j++]))
				;
			if (!needle[j])
				return ((char *)&haystack[temp]); 
			i = temp;
		}
		i++;
	}
	return (NULL);
}

int main() 
{ 
    // Take any two strings 
    char s1[] = "Geeksfor"; 
    char s2[] = "for"; 
    char*	p1; 
	char*	p2;
  
    // Find first occurence of s2 in s1 
//    p1 = strstr(s1, s2); 
	p2 = ft_strstr(s1, s2); 
    // Prints the result 
    // if (p1) { 
    //     printf("String found\n"); 
    //     printf("First occurrence of string '%s' in '%s' is '%s'", s2, s1, p1); 
    // } else
    //     printf("String not found\n"); 
	
	if (p2) { 
        printf("String found\n"); 
        printf("First occurrence of string '%s' in '%s' is '%s'", s2, s1, p2); 
    } else
        printf("String not found\n"); 
    return 0; 
} 

ft_atoi.c       1548944244  501   20    100644  536       `




#include "libft.h"

int ft_atoi(const char *str)
{
    int reg;
    int flag;
    int i;

    reg = 0;
    while (str && (*str == ' ' || *str == '\t' || *str == '\f'))
        str++;
    if (*str == '-')
    {
        flag = -1;
        str++;
    }    
    else if (*str == '+')
        str++;
    i = ft_strlen(str);
    while (--i >= 0)
    {
        if (ft_isdigit(str[i]))
        {
            reg *= 10;
            reg += str[i] - '0';
        }
        else
            return (reg * flag);
    }
    return (reg * flag);
}ft_isdigit.c    1548944244  501   20    100644  83        `


#include "libft.h"

int ft_isdigit(int c)
{
    return (c <= '9' || c >= '0');
}

ft_isprint.c    1548944244  501   20    100644  278       `


#include "libft.h"

int ft_isprint(int c)
{
    return (ft_isalnum(c) || ((c >= 40) && (c <= 47)) || \
    ((c >= 50) && (c <= 57)) || ((c >= 60) && (c <= 67)) ||\
    ((c >= 70) && (c <= 77)) || (c == 100) || ((c <= 133) \
    && (c <= 140)) || ((c >= 173) && (c <= 176)));
}ft_isascii.c    1548944244  501   20    100644  79        `


#include "libft.h"
int ft_isascii(int c)
{
    return (c >= 0 && c < 0177);
}
ft_isalpha.c    1548944244  501   20    100644  110       `


#include "libft.h"

int ft_isalpha(int c)
{
    return ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z'));
}ft_toupper.c    1548944244  501   20    100644  120       `





#include "libft.h"

int ft_toupper(int c)
{
    if (c >= 97 && c <= 122)
        return (c - 32);
    return (c);
}ft_tolower.c    1548944244  501   20    100644  118       `



#include "libft.h"

int ft_tolower(int c)
{
    if (c >= 65 && c <= 90)
        return (c + 32);
    return (c);
}
ft_strncpy.c    1548944244  501   20    100644  1123      `
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_strncpy.c                                       :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: xinzhang <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/01/25 16:51:17 by xinzhang          #+#    #+#             */
/*   Updated: 2019/01/25 17:06:03 by xinzhang         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "libft.h"

char	*ft_strncpy(char *dst, const char *src, size_t len)
{
	size_t	i;

	i = 0;
	while (src[i] && i < len)
	{
		dst[i] = src[i];
		i++;
	}
	while (i < len)
		dst[i++] = '\0';

	dst[i + 1] = '\0';
	return (dst);
}
ft_isalnum.c    1548944244  501   20    100644  93        `



#include "libft.h"

int ft_isalnum(int c)
{
    return (ft_isalpha(c) || ft_isdigit(c));
}
ft_strncat.c    1548944244  501   20    100644  318       `


#include "libft.h"

char    *ft_strncat(char *s1, const char *s2, size_t n)
{
    ft_strncpy(s1 + ft_strlen(s1), s2, n);
    return (s1);
}

// int main()
// {
//     char    ch[100] = "i like the cat";
//     char    *append = "   Really?";

//     printf("%s\n", ft_strncat(ch, append, 5));
//     return (0);
// }ft_strlcat.c    1548944244  501   20    100644  166       `



#include "libft.h"

size_t  ft_strlcat(char *dst, const char *src, size_t dstsize)
{
    ft_strncat(dst + ft_strlen(dst), src, dstsize =);
    return (dstsize);
}
ft_strncmp.c    1548944244  501   20    100644  526       `








#include "libft.h"

int ft_strncmp(const char *s1, const char *s2, size_t n)
{
    if (n == 0)
        return (0);
    while (n-- != 0)
    {
        if (*s1 != *s2++)
            return (*(unsigned char *)s1 - *(unsigned char *)--s2);
        if (*s1++ == 0)
            break;
    }
    return (0);
}

// int main()
// {
//     char    *a = "abcdef";
//     char    *b = "abiedg";

//     printf("the original %d\n",strncmp(a, b, 10));
//     printf("mine version %d\n",ft_strncmp(a, b, 10));
//     return (0);
// }ft_strrchr.c    1548944244  501   20    100644  251       `





#include "libft.h"

char    *ft_strrchr(const char *s, int c)
{
    int  i;

    if (!s)
        return (NULL);
    i = ft_strlen(s);
    while (--i >= 0)
    {
        if (s[i] == c)
            return ((char *)&s[i]);
    }
    return (NULL);
}
ft_strcmp.c     1548944244  501   20    100644  311       `




#include "libft.h"

int ft_strcmp(const char *s1, const char *s2)
{
    int i;

    i = -1;
    if (!s1)
        return ((unsigned char)s2);
    if (!s2)
        return ((unsigned char)s1); 
    while (s1[++i] && s2[i] && s1[i] == s2[i])
        ;
    return ((unsigned char)s1[i] - (unsigned char)s2[i]);
}
ft_strnstr.c    1548944244  501   20    100644  526       `


#include "libft.h"

char    *ft_strnstr(const char *haystack, const char *needle, size_t len)
{
    int	i;
	int j;
	int	temp;

	i = 0;
	j = 0;
	if (!haystack)
		return  (NULL);
	if (!needle)
		return ((char *)&haystack[ft_strlen(haystack) - 1]);
	while (i < (int)len && haystack[i] && needle[j])
	{	
		if (haystack[i] == needle[j])
		{
			j = 0;
			temp = i;	
			while (needle[j] && (haystack[i++] == needle[j++]))
				;
			if (!needle[j])
				return ((char *)&haystack[temp]); 
			i = temp;
		}
		i++;
	}
	return (NULL);
}
ft_itoa.c       1548944244  501   20    100644  735       `


#include "../libft.h"

int get_num_len(int n)
{
    int len;

    len = 0;
    if (n == 0)
        return (1);
    if (n < 0)
    {
        n = -n;
        len++;
    }
    while (n > 0)
    {
        len++;
        n /= 10;
    }
    return (len);
}

char    *ft_itoa(int n)
{
    char    *reg;
    int counter;
    int len_num;

    len_num = get_num_len(n);
//    printf("the length of num %d\n", len_num);
    reg = ft_strnew(len_num);
    counter = 0;
    if (n == 0)
        reg[0] = '0';
    else if (n < 0)
    {
        n = -n;
        reg[0] = '-';
    }   
    while (n > 0)
    {
        reg[--len_num] = n % 10 + '0';
        n /= 10;
    }
    return (reg);
}

// int main()
// {
//     printf("%s\n", ft_itoa(0));
// }
ft_strdel.c     1548944244  501   20    100644  82        `


#include "libft.h"

void    ft_strdel(char **as)
{
    ft_memdel((void **)as);
}ft_strclr.c     1548944244  501   20    100644  92        `


#include "libft.h"

void    ft_strclr(char *s)
{
    if (s)
		ft_bzero(s, ft_strlen(s));
}ft_strequ.c     1548944244  501   20    100644  107       `


#include "../libft.h"

int ft_strequ(char const *s1, char const *s2)
{
    return (!ft_strcmp(s1, s2));
}
ft_striter.c    1548944244  501   20    100644  138       `


#include "libft.h"

void    ft_striter(char *s, void (*f)(char *))
{
    if (s && f)
    {
        while (s)
            f(s++);
    }
}ft_striteri.c   1548944244  501   20    100644  224       `



#include "libft.h"

void    ft_striteri(char *s, void (*f)(unsigned int, char*))
{
    unsigned int i;

    if (!s)
        return (NULL);
    i = 0;
    while (s[i])//w
    {
        f(i, &s[i]);
        i++;
    }    
}ft_strjoin.c    1548944244  501   20    100644  242       `

#include "../libft.h"

char    *ft_strjoin(char const *s1, char const *s2)
{
    int len;
    char    *reg;

    len = ft_strlen(s1) + ft_strlen(s2) + 1;
    reg = ft_strnew(len);
    reg = ft_strcat(reg, s1);
    reg = ft_strcat(reg, s2);
}ft_strmap.c     1548944244  501   20    100644  202       `


#include "libft.h"

char    *ft_strmap(char const *s, char(*f)(char))
{
    if (!s || !f)
        return (NULL);

    while (s)
    {
        if (!f(s))
            return (NULL);
        s++;
    }
}ft_strmapi.c    1548944244  501   20    100644  221       `


#include "../libft.h"

void    ft_strmapi(char *s, void (*f)(unsigned int, char*))
{
    unsigned int i;

    if (!s)
        return (NULL);
    i = 0;
    while (s[i])
    {
        f(i, s[i]);
        i++;
    }    
}
ft_strnequ.c    1548944244  501   20    100644  121       `


#include "../libft.h"

int ft_strnequ(char const *s1, char const *s2, size_t n)
{
    return (ft_strncmp(s1, s2, n));
}
ft_strnew.c     1548944244  501   20    100644  222       `


#include "../libft.h"

char    *ft_strnew(size_t size)
{
    return (char *)ft_memalloc(size + 1);
}

// int main()
// {
//     char    *reg;

//     reg =ft_strnew(5);
//     printf("%s\n", reg);
//     return (0);
// }ft_strsplit.c   1548944244  501   20    100644  1787      `


#include "../libft.h"

void    p_arr(char **reg);

int ft_search_sym(char *ch, int sym)
{
    int i;

    i = 0;
    while (*ch && *ch != sym)
    {
        ch++;
        i++;
    }    
    return (i);
}

int ft_skip_sym(char *ch, int sym)
{
    int i;

    i = 0;
    while (ch && ch[i] == sym)
    {
//        ch++;
        i++;
    }
    return (i);
}

int ft_get_word(char *ch, int c)
{
    int count;
    int state;

    state = 0;
    count = 0;
    while (*ch)
    {
        if (*ch == c)
            state = 1;
        else if (state == 1)
        {
            state = 0;
            count++;
        }
        ch++;
    }
    return (count);
}

char    **ft_strsplit(char const *s, char c)
{
    int index;
    int total_len;
    int str_len;
	int counter;
	int	count;
    char    **reg;
	
		count = ft_get_word((char *)s, c);
        printf("the words are : %d\n", count);
		reg = (char **)malloc(sizeof(char *) * (count + 1));
    
        if (!reg)
            printf("malloc error\n");

		reg[count] = '\0';

//        p_arr(reg);
	total_len = ft_strlen(s);
    index = 0;
    counter = 0;
    index += ft_skip_sym((char *)&s[index], c);
    while (index < total_len)
    {
      	str_len = ft_search_sym((char *)&s[index], c);
 //       if (str_len == 0)

		reg[counter] = ft_strnew(str_len);
		ft_strncpy(reg[counter], (char *)&s[index], str_len);
//        printf("after copy %s\n", reg[counter]);
        index += str_len + ft_skip_sym((char *)&s[str_len + index], c);
        counter++;
    }
        return (reg);
}

int main()
{
    char *word = "**am*in****class*";
    char **reg;

    reg = ft_strsplit(word, '*');
    int i;

    printf("print result\n");
    i = 0;
    while (i < 3)
    {
        printf("%s\n", reg[i]);
        i++;
    }
    return (0);
}

ft_strsub.c     1548944244  501   20    100644  192       `


#include "../libft.h"

char    *ft_strsub(char const *s, unsigned int start, size_t len)
{
    char    *reg;

    reg = ft_strnew(len + 1);
    ft_strcpy(reg, &s[start]);
    return (reg);
}ft_strtrim.c    1548944244  501   20    100644  843       `


#include "../libft.h"

int ft_search(char *ch);
{
    int i;

    i = 0;
    while (*ch && *ch != ' ' && *ch != '\n' && *ch != '\t')
        i++;
    return (i);
}

int ft_skip_space(char *ch);
{
    int i;

    i = 0;
    while (ch && && ch[0] && ch[i] == '\n' && ch[i] == '\t' && ch[i] == ' ')
        i++;
    return (i);
}

char    *ft_strtrim(char const *s)
{
    int index;
    int total_len;
    int str_len;
    char    *reg;

    reg = ft_strnew(total_len);
    total_len = ft_strlen(s);
    index = 0;
    while (index < total_len)
    {
        str_len = ft_search(&s[index]);
        ft_strncat(reg, &s[index], str_len);
        index += str_len + ft_skip_space(&s[index]);
    }
    return (reg);
}

int main()
{
    char    *ch = "abc   990   ppp";
    printf("%s\n", ch);
    printf("%s\n", ft_strtrim(ch));

    return (0);
}
